import{_ as r,W as p,X as o,Y as a,Z as e,$ as s,a0 as t,C as n}from"./framework-b947aea2.js";const h={},d=a("h1",{id:"apifox的使用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#apifox的使用","aria-hidden":"true"},"#"),e(" Apifox的使用")],-1),c={href:"https://www.apifox.cn/",target:"_blank",rel:"noopener noreferrer"},g=t('<p>apifox 是对 api 接口进行测试的工具，该工具是联网才可以使用的，可能部分公司无法使用，但确实没有更加好用的。</p><h3 id="前置知识" tabindex="-1"><a class="header-anchor" href="#前置知识" aria-hidden="true">#</a> 前置知识</h3><h4 id="swagger" tabindex="-1"><a class="header-anchor" href="#swagger" aria-hidden="true">#</a> swagger</h4><p>后端写的接口如何告诉前端是什么样的呢，这时候就有很多种方式，其中 swagger 就是其中一种，通过网页的形式展现具体的 api</p><p>该网页提供了 url、请求方式、参数等，还可以简单调试接口</p><p>但该网页是不够完美的，这时候就需要 apifox 这个增强工具</p><h3 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使用</h3><p>打开 apifox，登录，创建项目，此时可以手动创建接口进行测试，这样太过于繁琐了</p><p>有 swagger 了，接口都在那上面写着，所以可以直接使用 swagger 那个网站提供的链接来导入到 apifox</p><p>​<img src="https://img.asfore.ml/vue/image-20230320155846-wboi92y.png" alt="image" loading="lazy">​</p><p>​<img src="https://img.asfore.ml/vue/image-20230320155938-63iwmou.png" alt="image" loading="lazy">​</p><p>数据源名称随便写，数据源 url 则根据不同版本的 swagger 填写不同的格式，只要打开 swagger 就能找到这个链接。</p><p>之后立即导入，即可完成 api 接口的导入。（注意：api 接口其实属于不能随便泄露的，apifox 会把数据全部存储在他们的服务器中，存在隐藏的危险，使用前需要判断是否可以使用）</p><h3 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h3><p>​<img src="https://img.asfore.ml/vue/image-20230320160526-h13h3xo.png" alt="image" loading="lazy">​</p><p>login 接口，post 请求，参数 username 和 password，响应是一个 json，里面有用信息为 data-&gt;accessToken</p><h3 id="备注" tabindex="-1"><a class="header-anchor" href="#备注" aria-hidden="true">#</a> 备注</h3><p>有一个问题，这么看是不是只有后端写好 api 接口了，前端才能获取这些数据呢？</p><p>大多数中小公司都是如此，事实上，应该前后端一起先设计 api 的参数已经返回值的类型及格式，之后通过类似 apifox 这种工具模拟出 api 接口，提供假数据，此时前后端同时工作，前端先利用 mock 出的 api，等后端开发好之后，切换到后端接口，进行测试。这样就不存在前端等后端，为什么不这样做呢，团队不规范。</p>',19);function l(f,m){const i=n("ExternalLinkIcon");return p(),o("div",null,[d,a("p",null,[a("a",c,[e("https://www.apifox.cn/"),s(i)])]),g])}const _=r(h,[["render",l],["__file","Apifox的使用.html.vue"]]);export{_ as default};
