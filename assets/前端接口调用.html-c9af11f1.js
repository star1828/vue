const t=JSON.parse('{"key":"v-161b1a82","path":"/posts/%E5%89%8D%E7%AB%AF%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8.html","title":"前端接口调用","lang":"zh-CN","frontmatter":{"title":"前端接口调用","date":"2023-03-20T08:23:52.000Z","lastmod":"2023-03-20T09:32:07.000Z","description":"前端接口调用 前置知识 前后端分离 前后端分离是一种软件架构风格，其中前端和后端的应用程序逻辑被分开，并通过API进行通信。这意味着前端可以使用任何语言或框架来实现用户界面，并使用API从后端获取数据和执行操作。后端则负责处理业务逻辑、数据存储和安全性等方面。这种架构模式通常被用于Web应用程序和移动应用程序的开发。 API API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。","head":[["meta",{"property":"og:url","content":"https://asfore.ml/vue/posts/%E5%89%8D%E7%AB%AF%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"演示"}],["meta",{"property":"og:title","content":"前端接口调用"}],["meta",{"property":"og:description","content":"前端接口调用 前置知识 前后端分离 前后端分离是一种软件架构风格，其中前端和后端的应用程序逻辑被分开，并通过API进行通信。这意味着前端可以使用任何语言或框架来实现用户界面，并使用API从后端获取数据和执行操作。后端则负责处理业务逻辑、数据存储和安全性等方面。这种架构模式通常被用于Web应用程序和移动应用程序的开发。 API API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-03-20T08:23:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端接口调用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T08:23:52.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":1,"title":"前端接口调用","slug":"前端接口调用","link":"#前端接口调用","children":[]}],"git":{},"readingTime":{"minutes":4.72,"words":1415},"filePathRelative":"posts/前端接口调用.md","localizedDate":"2023年3月20日","excerpt":"<h1> 前端接口调用</h1>\\n<h2> 前置知识</h2>\\n<h3> 前后端分离</h3>\\n<p>前后端分离是一种软件架构风格，其中前端和后端的应用程序逻辑被分开，并通过<strong>API</strong>进行通信。这意味着前端可以使用任何语言或框架来实现用户界面，并使用API从后端获取数据和执行操作。后端则负责处理业务逻辑、数据存储和安全性等方面。这种架构模式通常被用于Web应用程序和移动应用程序的开发。</p>\\n<h3> API</h3>\\n<p>API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p>","autoDesc":true}');export{t as data};
